// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowrIntegration.BackOfficeService.Data;



#nullable disable

namespace PowrIntegrationService.Data.Migrations
{
    [DbContext(typeof(PowrIntegrationDbContext))]
    [Migration("20250225100256_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.OutboxItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("FailureCount")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("MessageBody")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("MessageType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("OutboxItems");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.PluItem", b =>
                {
                    b.Property<long>("PluNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTimeEdited")
                        .HasColumnType("TEXT");

                    b.Property<string>("Flags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PluDescription")
                        .HasColumnType("TEXT");

                    b.Property<int>("SalesGroup")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SellingPrice1")
                        .HasColumnType("TEXT");

                    b.Property<string>("SizeDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Supplier1StockCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Supplier2StockCode")
                        .HasColumnType("TEXT");

                    b.HasKey("PluNumber");

                    b.ToTable("PluItems");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationClass", b =>
                {
                    b.Property<long>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<long>("FamilyCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.HasIndex("FamilyCode");

                    b.ToTable("ZraClassificationClasses");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationCode", b =>
                {
                    b.Property<long>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ClassCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMajorTarget")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShouldUse")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaxTypeCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.HasIndex("ClassCode");

                    b.ToTable("ZraClassificationCodes");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationFamily", b =>
                {
                    b.Property<long>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("SegmentCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Code");

                    b.HasIndex("SegmentCode");

                    b.ToTable("ZraClassificationFamilies");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationSegment", b =>
                {
                    b.Property<long>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.ToTable("ZraClassificationSegments");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraImportItem", b =>
                {
                    b.Property<string>("DeclarationNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemSequenceNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgentName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeclarationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeclarationReferenceNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExportCountryCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("HarmonizedSystemCode")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InvoiceForeignCurrencyAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceForeignCurrencyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InvoiceForeignCurrencyExchangeRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginCountryCode")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PackageQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageUnitCode")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuantityUnitCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalWeight")
                        .HasColumnType("TEXT");

                    b.HasKey("DeclarationNumber", "ItemSequenceNumber");

                    b.ToTable("ZraImportItems");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraStandardCode", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserDefinedName")
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.HasIndex("ClassCode");

                    b.ToTable("ZraStandardCodes");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraStandardCodeClass", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.ToTable("ZraStandardCodeClasses");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationClass", b =>
                {
                    b.HasOne("PowrIntegrationService.Data.Entities.ZraClassificationFamily", "Family")
                        .WithMany("Classes")
                        .HasForeignKey("FamilyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationCode", b =>
                {
                    b.HasOne("PowrIntegrationService.Data.Entities.ZraClassificationClass", "Class")
                        .WithMany("Codes")
                        .HasForeignKey("ClassCode");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationFamily", b =>
                {
                    b.HasOne("PowrIntegrationService.Data.Entities.ZraClassificationSegment", "Segment")
                        .WithMany("Families")
                        .HasForeignKey("SegmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraStandardCode", b =>
                {
                    b.HasOne("PowrIntegrationService.Data.Entities.ZraStandardCodeClass", "Class")
                        .WithMany("Codes")
                        .HasForeignKey("ClassCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationClass", b =>
                {
                    b.Navigation("Codes");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationFamily", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraClassificationSegment", b =>
                {
                    b.Navigation("Families");
                });

            modelBuilder.Entity("PowrIntegrationService.Data.Entities.ZraStandardCodeClass", b =>
                {
                    b.Navigation("Codes");
                });
#pragma warning restore 612, 618
        }
    }
}
