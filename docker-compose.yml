services:
  otel-collector:
    image: otel/opentelemetry-collector:0.120.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./container-files/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
    depends_on:
      - jaeger
      - prometheus
      - loki

  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: prometheus
    volumes:
      - ./container-files/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  loki:
    image: grafana/loki:3.3.2
    container_name: loki
    volumes:
      - ./container-files/loki-config.yaml:/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  jaeger:
    image: jaegertracing/all-in-one:1.65.0
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    volumes:
      - jaeger_data:/tmp
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector
      - "14250:14250"  # OTLP gRPC

  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - loki
      - jaeger
  
  rabbitmq:
    image: rabbitmq:4.0.5-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672" # RabbitMQ main port
      - "15672:15672" # Management console
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  powrintegration:
    image: ${DOCKER_REGISTRY-}powrintegration
    container_name: powrintegration
    build:
      context: PowrIntegrationService
      dockerfile: Dockerfile
    environment:
      DOTNET_ENVIRONMENT: Development
      ZraApi__BaseUrl: http://host.docker.internal:8080/sandboxvdsc/
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true
      otel-collector:
        condition: service_started
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - c:\\PowrIntegration:/usr/local/powrintegration
      - c:\\PowerTill8:/export

volumes:
  rabbitmq_data:
  grafana_data:
  prometheus_data:
  jaeger_data:  